FROM ruby:3.3.4-alpine

ENV APP_PATH=/var/app
ENV BUNDLE_VERSION=2.6.3
ENV BUNDLE_PATH=/usr/local/bundle/gems
ENV RAILS_LOG_TO_STDOUT=true
ENV RAILS_PORT=3000
ENV RAILS_ENV=development
ENV NOKOGIRI_USE_SYSTEM_LIBRARIES=1
ENV NOKOGIRI_SYSTEM_GEM_PATH=/usr/lib/
ENV PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/local/lib/pkgconfig
ENV BUNDLE_FORCE_RUBY_PLATFORM=1
ENV CFLAGS="-O2"
ENV CXXFLAGS="-O2"
ENV MAKEFLAGS="-j1"

# Install dependencies for application
RUN apk -U add --no-cache \
    build-base \
    git \
    postgresql-dev \
    postgresql-client \
    libpq \
    libxml2-dev \
    libxslt-dev \
    nodejs \
    yarn \
    imagemagick \
    tzdata \
    less \
    yaml-dev \
    gcompat \
    linux-headers \
    zlib-dev \
    readline-dev \
    libffi-dev \
    bash \
    gcc \
    make \
    g++ \
    libc-dev \
    linux-headers \
    ruby-dev \
    libc6-compat \
    && mkdir -p $APP_PATH

# Update gem system and install bundler
RUN gem update --system 3.6.3 \
    && gem install bundler --version "$BUNDLE_VERSION" \
    && rm -rf $GEM_HOME/cache/*

WORKDIR $APP_PATH

COPY ../Gemfile ../Gemfile.lock ../.ruby-version ../vendor ./

# Pre-compile problematic gems separately
RUN apk add --no-cache libxml2 libxslt && \
    bundle config build.nokogiri --use-system-libraries \
    --with-xml2-include=/usr/include/libxml2 \
    --with-xslt-include=/usr/include/libxslt && \
    gem install nokogiri -v '1.18.2' -- --use-system-libraries && \
    gem install oj -v '3.14.3' -- --with-cflags="-O2" --with-opt-dir="/usr/local"

# Then proceed with the rest of the bundle install
RUN bundle config set --local path 'vendor/bundle' \
    && bundle install --jobs 2 --retry 3 \
    && rm -rf vendor/bundle/ruby/3.3.0/cache/*.gem

# Copy the rest of the application
COPY ../. ./

# Copy entrypoint scripts and grant execution permissions
COPY ./docker/web-entrypoint.sh /usr/local/bin/web-entrypoint.sh
RUN chmod +x /usr/local/bin/web-entrypoint.sh

COPY ./docker/sidekiq-entrypoint.sh /usr/local/bin/sidekiq-entrypoint.sh
RUN chmod +x /usr/local/bin/sidekiq-entrypoint.sh

EXPOSE $RAILS_PORT

ENTRYPOINT [ "bundle", "exec" ]
